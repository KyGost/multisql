stages:
  - prepare
  - build
  - test
  - lint
  - publish
  - benchmark
  - audit
  - release

tag:
  stage: prepare
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  script:
    - echo "TAG=v$CI_COMMIT_TITLE" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

build:
  stage: build
  script: cargo build --target-dir ~/.cache/build-output/
  artifacts:
    paths:
      - ~/.cache/build-output/debug/*

test:
  stage: test
  script: cargo test --tests --target-dir ~/.cache/build-output/

doc-test:
  stage: test
  script: cargo test --doc --target-dir ~/.cache/build-output/

check-clippy:
  stage: lint
  script: cargo clippy --target-dir ~/.cache/build-output/
  allow_failure: true

check-fmt:
  stage: lint
  script: cargo fmt --check
  allow_failure: true

publish:
  stage: publish
  script: cargo publish --target-dir ~/.cache/build-output/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  artifacts:
    paths:
      - release/

benchmark:
  stage: benchmark
  script: cargo bench --target-dir ~/.cache/build-output/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  needs:
    - job: publish
  artifacts:
    paths:
      - bench/

coverage:
  stage: benchmark
  script: cargo tarpaulin --out Xml --target-dir ~/.cache/build-output/
  coverage: '/^\d+.\d+% coverage/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml

licenses:
  stage: benchmark
  script:
    - cargo license --tsv > licenses.tsv
    - cat licenses.tsv
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - licenses.tsv

updates:
  stage: audit
  script:
    - cargo outdated > updates.txt
    - cat updates.txt
    - "[[ $(wc -l <updates.txt) != 2 ]] && exit 1"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - updates.txt
  allow_failure: true

release:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  needs:
    - job: publish
  script:
    - echo Releasing $TAG
  release:
    name: '$TAG'
    description: 'Automatic Release: $EXTRA_DESCRIPTION'
    tag_name: '$TAG'
    ref: '$CI_COMMIT_SHA'