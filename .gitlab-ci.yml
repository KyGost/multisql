stages:
  - prepare
  - build
  - test
  - lint
  - publish
  - benchmark
  - audit
  - release

build:
  stage: build
  script: cargo build
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

test:
  stage: test
  script: cargo test --tests
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

doc-test:
  stage: test
  script: cargo test --doc
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

check-clippy:
  stage: lint
  script: cargo clippy
  allow_failure: true
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

check-fmt:
  stage: lint
  script: cargo fmt --check
  allow_failure: true

publish:
  stage: publish
  script: cargo publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

benchmark:
  stage: benchmark
  script: cargo bench
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  needs:
    - job: publish
  cache:
  - key:
      files:
        - Cargo.lock
    paths:
      - target/

coverage:
  stage: benchmark
  script: cargo tarpaulin --out Xml
  coverage: '/^\d+.\d+% coverage/'
  cache:
    - key:
        files:
          - Cargo.lock
      paths:
        - target/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
    paths:
      - cobertura.xml

licenses:
  stage: benchmark
  script:
    - cargo license --tsv > licenses.tsv
    - cat licenses.tsv
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - licenses.tsv

updates:
  stage: audit
  script:
    - cargo outdated > updates.txt
    - cat updates.txt
    - "[[ $(wc -l <updates.txt) != 2 ]] && exit 1"
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  artifacts:
    paths:
      - updates.txt

release:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /\d\.\d\.\d/
  needs:
    - job: publish
  script:
    - echo Releasing $TAG
  release:
    name: v$CI_COMMIT_TITLE
    description: "Automatic Release: v$CI_COMMIT_TITLE"
    tag_name: v$CI_COMMIT_TITLE
    ref: $CI_COMMIT_SHA